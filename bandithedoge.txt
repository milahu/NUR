trace: evaluation warning: destruqtor has been renamed to blepfx.destruqtor
error:
… while calling anonymous lambda

  at <nixpkgs> + /lib/attrsets.nix:1529:14:

  1528|         zipAttrsWith (
  1529|           n: values:
      |              ^
  1530|           let

… from call site

  at ./pkgs/default.nix:43:21:

    42|     element = callPackage' ./element;
    43|     emacsPackages = callPackages' ./emacsPackages;
      |                     ^
    44|     fennel-language-server = callPackage' ./fennel-language-server;

… while calling 'callPackages''

  at ./pkgs/default.nix:11:19:

    10|
    11|   callPackages' = pkg: pkgs.lib.recurseIntoAttrs (pkgs.callPackages pkg (callPackageArgs pkg));
      |                   ^
    12|

… from call site

  at ./pkgs/default.nix:11:24:

    10|
    11|   callPackages' = pkg: pkgs.lib.recurseIntoAttrs (pkgs.callPackages pkg (callPackageArgs pkg));
      |                        ^
    12|

… while calling 'recurseIntoAttrs'

  at <nixpkgs> + /lib/attrsets.nix:2021:22:

  2020|   */
  2021|   recurseIntoAttrs = attrs: attrs // { recurseForDerivations = true; };
      |                      ^
  2022|

… from call site

  at ./pkgs/default.nix:11:51:

    10|
    11|   callPackages' = pkg: pkgs.lib.recurseIntoAttrs (pkgs.callPackages pkg (callPackageArgs pkg));
      |                                                   ^
    12|

… while calling 'callPackagesWith'

  at <nixpkgs> + /lib/customisation.nix:340:19:

   339|   callPackagesWith =
   340|     autoArgs: fn: args:
      |                   ^
   341|     let

… from call site

  at <nixpkgs> + /lib/customisation.nix:349:8:

   348|     in
   349|     if isDerivation pkgs then
      |        ^
   350|       throw (

… while calling 'isDerivation'

  at <nixpkgs> + /lib/attrsets.nix:1251:18:

  1250|   */
  1251|   isDerivation = value: value.type or null == "derivation";
      |                  ^
  1252|

… from call site

  at <nixpkgs> + /lib/customisation.nix:346:14:

   345|       origArgs = auto // args;
   346|       pkgs = f origArgs;
      |              ^
   347|       mkAttrOverridable = name: _: makeOverridable (mirrorArgs (newArgs: (f newArgs).${name})) origArgs;

… while calling anonymous lambda

  at ./pkgs/emacsPackages/default.nix:1:1:

     1| {pkgs, ...}: let
      | ^
     2|   sources = import ./npins;

… from call site

  at ./pkgs/emacsPackages/default.nix:4:4:

     3| in
     4|   (pkgs.lib.makeExtensible (_:
      |    ^
     5|     pkgs.lib.attrsets.mapAttrs'

… while calling 'makeExtensibleWithCustomName'

  at <nixpkgs> + /lib/fixed-points.nix:445:19:

   444|   makeExtensibleWithCustomName =
   445|     extenderName: rattrs:
      |                   ^
   446|     fix' (

… from call site

  at <nixpkgs> + /lib/fixed-points.nix:446:5:

   445|     extenderName: rattrs:
   446|     fix' (
      |     ^
   447|       self:

… while calling 'fix''

  at <nixpkgs> + /lib/fixed-points.nix:113:5:

   112|   fix' =
   113|     f:
      |     ^
   114|     let

… from call site

  at <nixpkgs> + /lib/fixed-points.nix:115:11:

   114|     let
   115|       x = f x // {
      |           ^
   116|         __unfix__ = f;

… while calling anonymous lambda

  at <nixpkgs> + /lib/fixed-points.nix:447:7:

   446|     fix' (
   447|       self:
      |       ^
   448|       (rattrs self)

… from call site

  at <nixpkgs> + /lib/fixed-points.nix:448:8:

   447|       self:
   448|       (rattrs self)
      |        ^
   449|       // {

… while calling anonymous lambda

  at ./pkgs/emacsPackages/default.nix:4:29:

     3| in
     4|   (pkgs.lib.makeExtensible (_:
      |                             ^
     5|     pkgs.lib.attrsets.mapAttrs'

… from call site

  at ./pkgs/emacsPackages/default.nix:5:5:

     4|   (pkgs.lib.makeExtensible (_:
     5|     pkgs.lib.attrsets.mapAttrs'
      |     ^
     6|     (name: src: let

… while calling 'mapAttrs''

  at <nixpkgs> + /lib/attrsets.nix:1045:18:

  1044|   */
  1045|   mapAttrs' = f: set: listToAttrs (mapAttrsToList f set);
      |                  ^
  1046|

… from call site

  at <nixpkgs> + /lib/attrsets.nix:1045:36:

  1044|   */
  1045|   mapAttrs' = f: set: listToAttrs (mapAttrsToList f set);
      |                                    ^
  1046|

… while calling 'mapAttrsToList'

  at <nixpkgs> + /lib/attrsets.nix:1079:23:

  1078|   */
  1079|   mapAttrsToList = f: attrs: attrValues (mapAttrs f attrs);
      |                       ^
  1080|

… from call site

  at ./pkgs/emacsPackages/default.nix:29:6:

    28|       }))
    29|     (pkgs.lib.filterAttrs (_: v: pkgs.lib.isStorePath v) sources)))
      |      ^
    30|   .extend (import ./_overrides.nix {inherit pkgs;})

… while calling 'filterAttrs'

  at <nixpkgs> + /lib/attrsets.nix:657:23:

   656|   */
   657|   filterAttrs = pred: set: removeAttrs set (filter (name: !pred name set.${name}) (attrNames set));
      |                       ^
   658|

… while calling anonymous lambda

  at <nixpkgs> + /lib/attrsets.nix:657:53:

   656|   */
   657|   filterAttrs = pred: set: removeAttrs set (filter (name: !pred name set.${name}) (attrNames set));
      |                                                     ^
   658|

… from call site

  at <nixpkgs> + /lib/attrsets.nix:657:60:

   656|   */
   657|   filterAttrs = pred: set: removeAttrs set (filter (name: !pred name set.${name}) (attrNames set));
      |                                                            ^
   658|

… while calling anonymous lambda

  at ./pkgs/emacsPackages/default.nix:29:31:

    28|       }))
    29|     (pkgs.lib.filterAttrs (_: v: pkgs.lib.isStorePath v) sources)))
      |                               ^
    30|   .extend (import ./_overrides.nix {inherit pkgs;})

… from call site

  at ./pkgs/emacsPackages/default.nix:29:34:

    28|       }))
    29|     (pkgs.lib.filterAttrs (_: v: pkgs.lib.isStorePath v) sources)))
      |                                  ^
    30|   .extend (import ./_overrides.nix {inherit pkgs;})

… while calling 'isStorePath'

  at <nixpkgs> + /lib/strings.nix:2620:5:

  2619|   isStorePath =
  2620|     x:
      |     ^
  2621|     if isStringLike x then

… from call site

  at ./pkgs/emacsPackages/npins/default.nix:67:26:

    66|     in
    67|       spec // {outPath = mayOverride name path;};
      |                          ^
    68|

… while calling 'mayOverride'

  at ./pkgs/emacsPackages/npins/default.nix:32:23:

    31|   # (Taken from Niv for compatibility)
    32|   mayOverride = name: path: let
      |                       ^
    33|     envVarName = "NPINS_OVERRIDE_${saneName}";

… from call site

  at ./pkgs/emacsPackages/npins/default.nix:56:14:

    55|         if spec.type == "Git"
    56|         then mkGitSource spec
      |              ^
    57|         else if spec.type == "GitRelease"

… while calling 'mkGitSource'

  at ./pkgs/emacsPackages/npins/default.nix:69:17:

    68|
    69|   mkGitSource = {
      |                 ^
    70|     repository,

error: access to URI 'https://github.com/jdtsmith/eglot-booster/archive/1260d2f7dd18619b42359aa3e1ba6871aa52fd26.tar.gz' is forbidden in restricted mode
