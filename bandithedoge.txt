error:
… from call site

  at /nix/store/rnjbd8avjz7lhy7ra2bx90kgzqc8cifp-source/pkgs/default.nix:17:21:

    16|     dpf-plugins = callPackage' ./dpf-plugins;
    17|     emacsPackages = callPackages ./emacsPackages;
      |                     ^
    18|     fennel-language-server = callPackage' ./fennel-language-server;

… while calling 'callPackages'

  at /nix/store/rnjbd8avjz7lhy7ra2bx90kgzqc8cifp-source/pkgs/default.nix:8:18:

     7|
     8|   callPackages = pkg: pkgs.lib.recurseIntoAttrs (callPackage' pkg);
      |                  ^
     9|

… from call site

  at /nix/store/rnjbd8avjz7lhy7ra2bx90kgzqc8cifp-source/pkgs/default.nix:8:23:

     7|
     8|   callPackages = pkg: pkgs.lib.recurseIntoAttrs (callPackage' pkg);
      |                       ^
     9|

… while calling 'recurseIntoAttrs'

  at /nix/store/qj4mpzbis3syryphw71ywc8av4hhzp6y-source/lib/attrsets.nix:1169:5:

  1168|     # An attribute set to scan for derivations.
  1169|     attrs:
      |     ^
  1170|     attrs // { recurseForDerivations = true; };

… from call site

  at /nix/store/rnjbd8avjz7lhy7ra2bx90kgzqc8cifp-source/pkgs/default.nix:8:50:

     7|
     8|   callPackages = pkg: pkgs.lib.recurseIntoAttrs (callPackage' pkg);
      |                                                  ^
     9|

… while calling 'callPackage''

  at /nix/store/rnjbd8avjz7lhy7ra2bx90kgzqc8cifp-source/pkgs/default.nix:2:18:

     1| {pkgs, ...}: let
     2|   callPackage' = pkg:
      |                  ^
     3|     pkgs.callPackage pkg {

… from call site

  at /nix/store/rnjbd8avjz7lhy7ra2bx90kgzqc8cifp-source/pkgs/default.nix:3:5:

     2|   callPackage' = pkg:
     3|     pkgs.callPackage pkg {
      |     ^
     4|       inherit pkgs callPackage';

… while calling 'callPackageWith'

  at /nix/store/qj4mpzbis3syryphw71ywc8av4hhzp6y-source/lib/customisation.nix:153:35:

   152|   */
   153|   callPackageWith = autoArgs: fn: args:
      |                                   ^
   154|     let

… from call site

  at /nix/store/qj4mpzbis3syryphw71ywc8av4hhzp6y-source/lib/trivial.nix:440:7:

   439|     { # TODO: Should we add call-time "type" checking like built in?
   440|       __functor = self: f;
      |       ^
   441|       __functionArgs = args;

… while calling anonymous lambda

  at /nix/store/qj4mpzbis3syryphw71ywc8av4hhzp6y-source/lib/customisation.nix:96:17:

    95|     in
    96|     mirrorArgs (origArgs:
      |                 ^
    97|     let

… from call site

  at /nix/store/qj4mpzbis3syryphw71ywc8av4hhzp6y-source/lib/customisation.nix:98:16:

    97|     let
    98|       result = f origArgs;
      |                ^
    99|

… while calling anonymous lambda

  at /nix/store/rnjbd8avjz7lhy7ra2bx90kgzqc8cifp-source/pkgs/emacsPackages/default.nix:1:1:

     1| {pkgs, ...}: let
      | ^
     2|   sources = import ./nix/_sources.nix;

… from call site

  at /nix/store/rnjbd8avjz7lhy7ra2bx90kgzqc8cifp-source/pkgs/emacsPackages/default.nix:4:4:

     3| in
     4|   (pkgs.lib.makeExtensible (_:
      |    ^
     5|     pkgs.lib.attrsets.mapAttrs'

… while calling 'makeExtensibleWithCustomName'

  at /nix/store/qj4mpzbis3syryphw71ywc8av4hhzp6y-source/lib/fixed-points.nix:306:48:

   305|   */
   306|   makeExtensibleWithCustomName = extenderName: rattrs:
      |                                                ^
   307|     fix' (self: (rattrs self) // {

… from call site

  at /nix/store/qj4mpzbis3syryphw71ywc8av4hhzp6y-source/lib/fixed-points.nix:307:5:

   306|   makeExtensibleWithCustomName = extenderName: rattrs:
   307|     fix' (self: (rattrs self) // {
      |     ^
   308|       ${extenderName} = f: makeExtensibleWithCustomName extenderName (extends f rattrs);

… while calling 'fix''

  at /nix/store/qj4mpzbis3syryphw71ywc8av4hhzp6y-source/lib/fixed-points.nix:84:10:

    83|   */
    84|   fix' = f: let x = f x // { __unfix__ = f; }; in x;
      |          ^
    85|

… from call site

  at /nix/store/qj4mpzbis3syryphw71ywc8av4hhzp6y-source/lib/fixed-points.nix:84:21:

    83|   */
    84|   fix' = f: let x = f x // { __unfix__ = f; }; in x;
      |                     ^
    85|

… while calling anonymous lambda

  at /nix/store/qj4mpzbis3syryphw71ywc8av4hhzp6y-source/lib/fixed-points.nix:307:11:

   306|   makeExtensibleWithCustomName = extenderName: rattrs:
   307|     fix' (self: (rattrs self) // {
      |           ^
   308|       ${extenderName} = f: makeExtensibleWithCustomName extenderName (extends f rattrs);

… from call site

  at /nix/store/qj4mpzbis3syryphw71ywc8av4hhzp6y-source/lib/fixed-points.nix:307:18:

   306|   makeExtensibleWithCustomName = extenderName: rattrs:
   307|     fix' (self: (rattrs self) // {
      |                  ^
   308|       ${extenderName} = f: makeExtensibleWithCustomName extenderName (extends f rattrs);

… while calling anonymous lambda

  at /nix/store/rnjbd8avjz7lhy7ra2bx90kgzqc8cifp-source/pkgs/emacsPackages/default.nix:4:29:

     3| in
     4|   (pkgs.lib.makeExtensible (_:
      |                             ^
     5|     pkgs.lib.attrsets.mapAttrs'

… from call site

  at /nix/store/rnjbd8avjz7lhy7ra2bx90kgzqc8cifp-source/pkgs/emacsPackages/default.nix:5:5:

     4|   (pkgs.lib.makeExtensible (_:
     5|     pkgs.lib.attrsets.mapAttrs'
      |     ^
     6|     (name: src: let

… while calling 'mapAttrs''

  at /nix/store/qj4mpzbis3syryphw71ywc8av4hhzp6y-source/lib/attrsets.nix:632:5:

   631|     # Attribute set to map over.
   632|     set:
      |     ^
   633|     listToAttrs (map (attr: f attr set.${attr}) (attrNames set));

… from call site

  at /nix/store/rnjbd8avjz7lhy7ra2bx90kgzqc8cifp-source/pkgs/emacsPackages/default.nix:28:6:

    27|       }))
    28|     (pkgs.lib.filterAttrs (_: v: pkgs.lib.isStorePath v) sources)))
      |      ^
    29|   .extend (import ./_overrides.nix {inherit pkgs;})

… while calling 'filterAttrs'

  at /nix/store/qj4mpzbis3syryphw71ywc8av4hhzp6y-source/lib/attrsets.nix:419:5:

   418|     # The attribute set to filter
   419|     set:
      |     ^
   420|     listToAttrs (concatMap (name: let v = set.${name}; in if pred name v then [(nameValuePair name v)] else []) (attrNames set));

… while calling anonymous lambda

  at /nix/store/qj4mpzbis3syryphw71ywc8av4hhzp6y-source/lib/attrsets.nix:420:29:

   419|     set:
   420|     listToAttrs (concatMap (name: let v = set.${name}; in if pred name v then [(nameValuePair name v)] else []) (attrNames set));
      |                             ^
   421|

… from call site

  at /nix/store/qj4mpzbis3syryphw71ywc8av4hhzp6y-source/lib/attrsets.nix:420:62:

   419|     set:
   420|     listToAttrs (concatMap (name: let v = set.${name}; in if pred name v then [(nameValuePair name v)] else []) (attrNames set));
      |                                                              ^
   421|

… while calling anonymous lambda

  at /nix/store/rnjbd8avjz7lhy7ra2bx90kgzqc8cifp-source/pkgs/emacsPackages/default.nix:28:31:

    27|       }))
    28|     (pkgs.lib.filterAttrs (_: v: pkgs.lib.isStorePath v) sources)))
      |                               ^
    29|   .extend (import ./_overrides.nix {inherit pkgs;})

… from call site

  at /nix/store/rnjbd8avjz7lhy7ra2bx90kgzqc8cifp-source/pkgs/emacsPackages/default.nix:28:34:

    27|       }))
    28|     (pkgs.lib.filterAttrs (_: v: pkgs.lib.isStorePath v) sources)))
      |                                  ^
    29|   .extend (import ./_overrides.nix {inherit pkgs;})

… while calling 'isStorePath'

  at /nix/store/qj4mpzbis3syryphw71ywc8av4hhzp6y-source/lib/strings.nix:1012:17:

  1011|   */
  1012|   isStorePath = x:
      |                 ^
  1013|     if isStringLike x then

… from call site

  at /nix/store/rnjbd8avjz7lhy7ra2bx90kgzqc8cifp-source/pkgs/emacsPackages/nix/_sources.nix:223:33:

   222|           "The values in sources.json should not have an 'outPath' attribute"
   223|         else spec // {outPath = replace name (fetch config.pkgs name spec);}
      |                                 ^
   224|     )

… while calling 'replace'

  at /nix/store/rnjbd8avjz7lhy7ra2bx90kgzqc8cifp-source/pkgs/emacsPackages/nix/_sources.nix:139:19:

   138|   # the path directly as opposed to the fetched source.
   139|   replace = name: drv: let
      |                   ^
   140|     saneName = stringAsChars (c:

… from call site

  at /nix/store/rnjbd8avjz7lhy7ra2bx90kgzqc8cifp-source/pkgs/emacsPackages/nix/_sources.nix:223:47:

   222|           "The values in sources.json should not have an 'outPath' attribute"
   223|         else spec // {outPath = replace name (fetch config.pkgs name spec);}
      |                                               ^
   224|     )

… while calling 'fetch'

  at /nix/store/rnjbd8avjz7lhy7ra2bx90kgzqc8cifp-source/pkgs/emacsPackages/nix/_sources.nix:120:23:

   119|   # The actual fetching function.
   120|   fetch = pkgs: name: spec:
      |                       ^
   121|     if ! builtins.hasAttr "type" spec

… from call site

  at /nix/store/rnjbd8avjz7lhy7ra2bx90kgzqc8cifp-source/pkgs/emacsPackages/nix/_sources.nix:126:10:

   125|     else if spec.type == "tarball"
   126|     then fetch_tarball pkgs name spec
      |          ^
   127|     else if spec.type == "git"

… while calling 'fetch_tarball'

  at /nix/store/rnjbd8avjz7lhy7ra2bx90kgzqc8cifp-source/pkgs/emacsPackages/nix/_sources.nix:21:31:

    20|
    21|   fetch_tarball = pkgs: name: spec: let
      |                               ^
    22|     name' = sanitizeName name + "-src";

… from call site

  at /nix/store/rnjbd8avjz7lhy7ra2bx90kgzqc8cifp-source/pkgs/emacsPackages/nix/_sources.nix:26:7:

    25|     then
    26|       builtins_fetchTarball {
      |       ^
    27|         name = name';

… while calling 'builtins_fetchTarball'

  at /nix/store/rnjbd8avjz7lhy7ra2bx90kgzqc8cifp-source/pkgs/emacsPackages/nix/_sources.nix:191:27:

   190|   # fetchTarball version that is compatible between all the versions of Nix
   191|   builtins_fetchTarball = {
      |                           ^
   192|     url,

error: access to URI 'https://github.com/lastquestion/explain-pause-mode/archive/2356c8c3639cbeeb9751744dbe737267849b4b51.tar.gz' is forbidden in restricted mode
