trace: evaluation warning: airwindows-consolidated has been upstreamed to nixpkgs as airwin2rack
trace: evaluation warning: cantata has been upstreamed to nixpkgs as cantata
trace: evaluation warning: destruqtor has been renamed to blepfx.destruqtor
error:
… while calling anonymous lambda

  at <nixpkgs> + /lib/attrsets.nix:1529:14:

  1528|         zipAttrsWith (
  1529|           n: values:
      |              ^
  1530|           let

… from call site

  at <nixpkgs> + /lib/attrsets.nix:1533:36:

  1532|           in
  1533|           if length values == 1 || pred here (elemAt values 1) (head values) then
      |                                    ^
  1534|             head values

… while calling anonymous lambda

  at <nixpkgs> + /lib/attrsets.nix:1586:18:

  1585|     recursiveUpdateUntil (
  1586|       path: lhs: rhs:
      |                  ^
  1587|       !(isAttrs lhs && isAttrs rhs)

… while calling anonymous lambda

  at <nixpkgs> + /lib/attrsets.nix:1529:14:

  1528|         zipAttrsWith (
  1529|           n: values:
      |              ^
  1530|           let

… from call site

  at <nixpkgs> + /lib/attrsets.nix:1533:36:

  1532|           in
  1533|           if length values == 1 || pred here (elemAt values 1) (head values) then
      |                                    ^
  1534|             head values

… while calling anonymous lambda

  at <nixpkgs> + /lib/attrsets.nix:1586:18:

  1585|     recursiveUpdateUntil (
  1586|       path: lhs: rhs:
      |                  ^
  1587|       !(isAttrs lhs && isAttrs rhs)

… from call site

  at ./pkgs/default.nix:42:21:

    41|     element = callPackage' ./element;
    42|     emacsPackages = callPackages' ./emacsPackages;
      |                     ^
    43|     fennel-language-server = callPackage' ./fennel-language-server;

… while calling 'callPackages''

  at ./pkgs/default.nix:11:19:

    10|
    11|   callPackages' = pkg: pkgs.lib.recurseIntoAttrs (pkgs.callPackages pkg (callPackageArgs pkg));
      |                   ^
    12|

… from call site

  at ./pkgs/default.nix:11:24:

    10|
    11|   callPackages' = pkg: pkgs.lib.recurseIntoAttrs (pkgs.callPackages pkg (callPackageArgs pkg));
      |                        ^
    12|

… while calling 'recurseIntoAttrs'

  at <nixpkgs> + /lib/attrsets.nix:2021:22:

  2020|   */
  2021|   recurseIntoAttrs = attrs: attrs // { recurseForDerivations = true; };
      |                      ^
  2022|

… from call site

  at ./pkgs/default.nix:11:51:

    10|
    11|   callPackages' = pkg: pkgs.lib.recurseIntoAttrs (pkgs.callPackages pkg (callPackageArgs pkg));
      |                                                   ^
    12|

… while calling 'callPackagesWith'

  at <nixpkgs> + /lib/customisation.nix:340:19:

   339|   callPackagesWith =
   340|     autoArgs: fn: args:
      |                   ^
   341|     let

… from call site

  at <nixpkgs> + /lib/customisation.nix:349:8:

   348|     in
   349|     if isDerivation pkgs then
      |        ^
   350|       throw (

… while calling 'isDerivation'

  at <nixpkgs> + /lib/attrsets.nix:1251:18:

  1250|   */
  1251|   isDerivation = value: value.type or null == "derivation";
      |                  ^
  1252|

… from call site

  at <nixpkgs> + /lib/customisation.nix:346:14:

   345|       origArgs = auto // args;
   346|       pkgs = f origArgs;
      |              ^
   347|       mkAttrOverridable = name: _: makeOverridable (mirrorArgs (newArgs: (f newArgs).${name})) origArgs;

… while calling anonymous lambda

  at ./pkgs/emacsPackages/default.nix:1:1:

     1| { pkgs, ... }:
      | ^
     2| let

… from call site

  at ./pkgs/emacsPackages/default.nix:5:2:

     4| in
     5| (pkgs.lib.makeExtensible (
      |  ^
     6|   _:

… while calling 'makeExtensibleWithCustomName'

  at <nixpkgs> + /lib/fixed-points.nix:445:19:

   444|   makeExtensibleWithCustomName =
   445|     extenderName: rattrs:
      |                   ^
   446|     fix' (

… from call site

  at <nixpkgs> + /lib/fixed-points.nix:446:5:

   445|     extenderName: rattrs:
   446|     fix' (
      |     ^
   447|       self:

… while calling 'fix''

  at <nixpkgs> + /lib/fixed-points.nix:113:5:

   112|   fix' =
   113|     f:
      |     ^
   114|     let

… from call site

  at <nixpkgs> + /lib/fixed-points.nix:115:11:

   114|     let
   115|       x = f x // {
      |           ^
   116|         __unfix__ = f;

… while calling anonymous lambda

  at <nixpkgs> + /lib/fixed-points.nix:447:7:

   446|     fix' (
   447|       self:
      |       ^
   448|       (rattrs self)

… from call site

  at <nixpkgs> + /lib/fixed-points.nix:448:8:

   447|       self:
   448|       (rattrs self)
      |        ^
   449|       // {

… while calling anonymous lambda

  at ./pkgs/emacsPackages/default.nix:6:3:

     5| (pkgs.lib.makeExtensible (
     6|   _:
      |   ^
     7|   pkgs.lib.attrsets.mapAttrs' (

… from call site

  at ./pkgs/emacsPackages/default.nix:7:3:

     6|   _:
     7|   pkgs.lib.attrsets.mapAttrs' (
      |   ^
     8|     name: src:

… while calling 'mapAttrs''

  at <nixpkgs> + /lib/attrsets.nix:1045:18:

  1044|   */
  1045|   mapAttrs' = f: set: listToAttrs (mapAttrsToList f set);
      |                  ^
  1046|

… from call site

  at <nixpkgs> + /lib/attrsets.nix:1045:36:

  1044|   */
  1045|   mapAttrs' = f: set: listToAttrs (mapAttrsToList f set);
      |                                    ^
  1046|

… while calling 'mapAttrsToList'

  at <nixpkgs> + /lib/attrsets.nix:1079:23:

  1078|   */
  1079|   mapAttrsToList = f: attrs: attrValues (mapAttrs f attrs);
      |                       ^
  1080|

… from call site

  at ./pkgs/emacsPackages/default.nix:32:6:

    31|     )
    32|   ) (pkgs.lib.filterAttrs (_: v: pkgs.lib.isStorePath v) sources)
      |      ^
    33| )).extend

… while calling 'filterAttrs'

  at <nixpkgs> + /lib/attrsets.nix:657:23:

   656|   */
   657|   filterAttrs = pred: set: removeAttrs set (filter (name: !pred name set.${name}) (attrNames set));
      |                       ^
   658|

… while calling anonymous lambda

  at <nixpkgs> + /lib/attrsets.nix:657:53:

   656|   */
   657|   filterAttrs = pred: set: removeAttrs set (filter (name: !pred name set.${name}) (attrNames set));
      |                                                     ^
   658|

… from call site

  at <nixpkgs> + /lib/attrsets.nix:657:60:

   656|   */
   657|   filterAttrs = pred: set: removeAttrs set (filter (name: !pred name set.${name}) (attrNames set));
      |                                                            ^
   658|

… while calling anonymous lambda

  at ./pkgs/emacsPackages/default.nix:32:31:

    31|     )
    32|   ) (pkgs.lib.filterAttrs (_: v: pkgs.lib.isStorePath v) sources)
      |                               ^
    33| )).extend

… from call site

  at ./pkgs/emacsPackages/default.nix:32:34:

    31|     )
    32|   ) (pkgs.lib.filterAttrs (_: v: pkgs.lib.isStorePath v) sources)
      |                                  ^
    33| )).extend

… while calling 'isStorePath'

  at <nixpkgs> + /lib/strings.nix:2655:5:

  2654|   isStorePath =
  2655|     x:
      |     ^
  2656|     if isStringLike x then

… from call site

  at ./pkgs/emacsPackages/npins/default.nix:67:25:

    66|     in
    67|     spec // { outPath = mayOverride name path; };
      |                         ^
    68|

… while calling 'mayOverride'

  at ./pkgs/emacsPackages/npins/default.nix:31:11:

    30|   mayOverride =
    31|     name: path:
      |           ^
    32|     let

… from call site

  at ./pkgs/emacsPackages/npins/default.nix:55:11:

    54|         if spec.type == "Git" then
    55|           mkGitSource spec
      |           ^
    56|         else if spec.type == "GitRelease" then

… while calling 'mkGitSource'

  at ./pkgs/emacsPackages/npins/default.nix:70:5:

    69|   mkGitSource =
    70|     {
      |     ^
    71|       repository,

error: access to URI 'https://github.com/jdtsmith/eglot-booster/archive/1260d2f7dd18619b42359aa3e1ba6871aa52fd26.tar.gz' is forbidden in restricted mode
