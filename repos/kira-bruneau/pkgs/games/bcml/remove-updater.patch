diff --git a/bcml/_api.py b/bcml/_api.py
index 66d2ce5..f3a11ed 100644
--- a/bcml/_api.py
+++ b/bcml/_api.py
@@ -69,10 +69,6 @@ class Api:
         updated = util.get_settings("last_version") < VERSION
         res = {
             "version": USER_VERSION,
-            "update": (
-                util.get_latest_bcml() > VERSION
-                and not util.get_settings("suppress_update")
-            ),
             "showChangelog": updated and util.get_settings("changelog"),
         }
         if updated:
@@ -800,46 +796,6 @@ class Api:
         help_thread = Thread(target=help_window, args=(self.host,))
         help_thread.start()
 
-    @win_or_lose
-    def update_bcml(self):
-        exe = str(util.get_python_exe(False))
-        args = [
-            "-m",
-            "pip",
-            "install",
-            "--disable-pip-version-check",
-            "--no-warn-script-location",
-            "--upgrade",
-            "bcml",
-        ]
-        if DEBUG:
-            args.insert(-2, "--pre")
-        if SYSTEM == "Windows":
-            with NamedTemporaryFile("w", suffix=".bat", delete=False) as updater:
-                updater.write(
-                    "@echo off\n"
-                    'taskkill /fi "WINDOWTITLE eq BOTW Cross-Platform Mod Loader"\n'
-                    f"\"{exe}\" {' '.join(args)}\n"
-                    "echo Finished updating, will launch BCML in a moment!\n"
-                    "timeout 2 >nul 2>&1\n"
-                    f'start "" "{str(util.get_python_exe(True))}" -m bcml\n'
-                )
-                file = updater.name
-            os.system(f"timeout 2 >nul 2>&1 && start cmd /c {file}")
-        else:
-            with NamedTemporaryFile("w", suffix=".sh", delete=False) as updater:
-                updater.write(
-                    "#!/usr/bin/bash\n"
-                    "sleep 2\n"
-                    f"\"{exe}\" {' '.join(args)}\n"
-                    "echo Finished updating, will launch BCML in a moment!\n"
-                    f"{exe} -m bcml"
-                )
-                file = updater.name
-            Popen(["/bin/sh", file], start_new_session=True)
-        for win in webviewb.windows:
-            win.destroy()
-
     def restart(self):
         opener = Thread(target=start_new_instance)
         opener.start()
diff --git a/bcml/assets/src/js/App.jsx b/bcml/assets/src/js/App.jsx
index 2826c26..ec03ac1 100644
--- a/bcml/assets/src/js/App.jsx
+++ b/bcml/assets/src/js/App.jsx
@@ -51,7 +51,6 @@ class App extends React.Component {
             confirmText: "",
             confirmCallback: () => {},
             showAbout: false,
-            update: false,
             changelog: true,
             showChangelog: false,
             version: "3.0"
@@ -381,16 +380,6 @@ class App extends React.Component {
             .catch(this.props.onError);
     };
 
-    updateBcml = () => {
-        this.confirm(
-            "Are you sure you want to update BCML? " +
-                "Updating will close the program, run the update, and attempt to lauch it again.",
-            () => {
-                pywebview.api.update_bcml();
-            }
-        );
-    };
-
     setProgress = (title, msg) => {
         this.setState({
             progressTitle: title,
@@ -418,9 +407,6 @@ class App extends React.Component {
                                 onClick={() => pywebview.api.save_mod_list()}>
                                 Save Mod List
                             </Dropdown.Item>
-                            <Dropdown.Item onClick={this.updateBcml}>
-                                Update BCML
-                            </Dropdown.Item>
                             <Dropdown.Item as="a" href="/index.html?firstrun">
                                 Run Setup Wizard
                             </Dropdown.Item>
@@ -554,14 +540,6 @@ class App extends React.Component {
                     message={this.state.confirmText}
                     onClose={this.state.confirmCallback.bind(this)}
                 />
-                <UpdateDialog
-                    show={this.state.update}
-                    onClose={confirmed =>
-                        this.setState({ update: false }, () =>
-                            confirmed ? this.updateBcml() : null
-                        )
-                    }
-                />
                 <BackupModal
                     show={this.state.showBackups}
                     busy={this.state.showProgress}
@@ -698,25 +676,6 @@ const ConfirmDialog = props => {
     );
 };
 
-const UpdateDialog = props => {
-    return (
-        <Modal show={props.show}>
-            <Modal.Header>
-                <Modal.Title>Update Available</Modal.Title>
-            </Modal.Header>
-            <Modal.Body>
-                There is a new update available for BCML. Would you like to install it?
-            </Modal.Body>
-            <Modal.Footer>
-                <Button onClick={() => props.onClose(true)}>OK</Button>
-                <Button variant="secondary" onClick={() => props.onClose(false)}>
-                    Close
-                </Button>
-            </Modal.Footer>
-        </Modal>
-    );
-};
-
 class Changelog extends React.Component {
     constructor(props) {
         super(props);
diff --git a/bcml/assets/src/js/Settings.jsx b/bcml/assets/src/js/Settings.jsx
index b837396..e5980fa 100644
--- a/bcml/assets/src/js/Settings.jsx
+++ b/bcml/assets/src/js/Settings.jsx
@@ -24,7 +24,6 @@ class Settings extends React.Component {
             wiiu: true,
             no_hardlinks: false,
             force_7z: false,
-            suppress_update: false,
             valid: false,
             loaded: false,
             nsfw: false,
@@ -540,24 +539,6 @@ class Settings extends React.Component {
                                 />
                             </OverlayTrigger>
                         </Form.Group>
-                        <Form.Group controlId="suppress_update">
-                            <OverlayTrigger
-                                overlay={
-                                    <Tooltip>
-                                        By default, BCML will notify you when it detects
-                                        an updated version is available. Check this to
-                                        turn that off.
-                                    </Tooltip>
-                                }
-                                placement={"left"}>
-                                <Form.Check
-                                    type="checkbox"
-                                    label="Disable BCML update notification"
-                                    checked={this.state.suppress_update}
-                                    onChange={this.handleChange}
-                                />
-                            </OverlayTrigger>
-                        </Form.Group>
                         <Form.Group controlId="changelog">
                             <OverlayTrigger
                                 overlay={
diff --git a/bcml/util.py b/bcml/util.py
index a1d3cb2..643310d 100644
--- a/bcml/util.py
+++ b/bcml/util.py
@@ -579,7 +579,6 @@ DEFAULT_SETTINGS = {
     "wiiu": True,
     "no_hardlinks": False,
     "force_7z": False,
-    "suppress_update": False,
     "nsfw": False,
     "last_version": VERSION,
     "changelog": True,
@@ -1300,25 +1299,6 @@ def get_open_port():
     return port
 
 
-@lru_cache(1)
-def get_latest_bcml() -> str:
-    try:
-        res = requests.get("https://pypi.org/rss/project/bcml/releases.xml")
-        doc = minidom.parseString(res.text)
-        versions = sorted(
-            (
-                item.getElementsByTagName("title")[0].childNodes[0].data
-                for item in doc.getElementsByTagName("item")
-            ),
-            reverse=True,
-        )
-        if DEBUG:
-            return versions[0]
-        return next(v for v in versions if "a" not in v and "b" not in v)
-    except:  # pylint: disable=bare-except
-        return "0.0.0"
-
-
 class RulesParser(ConfigParser):
     # pylint: disable=arguments-differ,too-many-ancestors
     def __init__(self):
