#!/usr/bin/nft -f

flush ruleset

define chn_ns = {
  114.114.114.114
}

define open_udp_ports = {
  1024-65535
}

table ip filter {
  # allow all packets sent by the firewall machine itself
  chain output {
    type filter hook output priority 100; policy accept;
  }

  # allow LAN to firewall, disallow WAN to firewall
  chain input {
    type filter hook input priority 0; policy accept;

    iifname { lo, intern0 } accept
    ip daddr 192.168.0.0/16 accept
    ip protocol icmp accept

    ct state vmap {
      established: accept,
      related: accept,
      invalid: drop
    }
    udp dport $open_udp_ports ct state new accept

    reject
  }

  flowtable f {
    hook ingress priority 0;
    devices = { intern0, extern0 };
  }

  # allow packets from LAN to WAN, and WAN to LAN if LAN initiated the connection
  chain forward {
    type filter hook forward priority 0; policy drop;
    ip protocol {tcp, udp} flow offload @f

    iifname intern0 oifname extern0 accept
    iifname extern0 oifname intern0 ct state { related, established } accept
    iifname extern0 oifname intern0 udp dport $open_udp_ports ct state new accept
  }
}

table ip nat {
  chain prerouting {
    type nat hook prerouting priority -100; policy accept;
    iifname intern0 ip daddr $chn_ns udp dport 53 redirect
    iifname extern0 fullcone
  }

  # for all packets to WAN, after routing, replace source address with primary IP of WAN interface
  chain postrouting {
    type nat hook postrouting priority 100; policy accept;
    oifname extern0 fullcone
  }
}

table ip6 filter {
  chain output {
    type filter hook output priority 100; policy accept;
  }

  chain input {
    type filter hook input priority 0; policy accept;

    iifname { lo, intern0 } accept
    ip6 nexthdr icmpv6 accept

    ct state vmap {
      established: accept,
      related: accept,
      invalid: drop
    }

    reject
  }

  chain forward {
    type filter hook forward priority 0; policy drop;
  }
}
