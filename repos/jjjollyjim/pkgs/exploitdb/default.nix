with builtins;
{
  withPapers ? false,
  withBinaries ? false,
  lib, fetchFromGitHub, makeWrapper, runCommand, writeText, jq, bash, ncurses6
}:
let exploitdb = fetchFromGitHub ({
      owner = "offensive-security";
      repo = "exploitdb";
    } // (fromJSON (readFile ./exploitdb.json)));
    exploitdb-papers = fetchFromGitHub ({
      owner = "offensive-security";
      repo = "exploitdb-papers";
    } // (fromJSON (readFile ./exploitdb-papers.json)));
    exploitdb-bin-sploits = fetchFromGitHub ({
      owner = "offensive-security";
      repo = "exploitdb-bin-sploits";
    } // (fromJSON (readFile ./exploitdb-bin-sploits.json)));
in
# Why didn't I use mkDerivation lol
runCommand "exploitdb" {} ''
mkdir -p $out/opt/exploitdb
mkdir -p $out/bin
ln -s ${exploitdb}/files_exploits.csv $out/opt/exploitdb
ln -s ${exploitdb}/exploits $out/opt/exploitdb
ln -s ${exploitdb}/files_shellcodes.csv $out/opt/exploitdb
ln -s ${exploitdb}/shellcodes $out/opt/exploitdb

cp ${exploitdb}/searchsploit $out/opt/exploitdb

echo -e "#!/bin/sh\nPATH="\$PATH:${ncurses6}/bin"\nexec ${bash}/bin/bash $out/opt/exploitdb/searchsploit \$@" > $out/bin/searchsploit
chmod +x $out/bin/searchsploit

ln -s ${writeText "searchsploitrc" ''
progname="$( basename "$0" )"

files_array+=("files_exploits.csv")
path_array+=("${exploitdb}")
name_array+=("Exploit")

files_array+=("files_shellcodes.csv")
path_array+=("${exploitdb}")
name_array+=("Shellcode")

${lib.strings.optionalString withPapers ''
files_array+=("files_papers.csv")
path_array+=("${exploitdb-papers}")
name_array+=("Paper")
''}
''} $out/opt/exploitdb/.searchsploit_rc

${lib.strings.optionalString withPapers ''
ln -s ${exploitdb}/files_papers.csv $out/opt/exploitdb
ln -s ${exploitdb}/papers $out/opt/exploitdb
ln -s ${exploitdb}/docs $out/opt/exploitdb
''}

${lib.strings.optionalString withBinaries ''
ln -s ${exploitdb}/bin-sploits $out/opt/exploitdb
''}

# Test
stat "$($out/bin/searchsploit dpkg --json | ${jq}/bin/jq -r '.RESULTS_EXPLOIT | .[0].Path')" >/dev/null
stat "$($out/bin/searchsploit reverse php --json | ${jq}/bin/jq -r '.RESULTS_SHELLCODE | .[0].Path')" >/dev/null
${lib.strings.optionalString withPapers ''
stat "$($out/bin/searchsploit gtfo 0x00 --json | ${jq}/bin/jq -r '.RESULTS_PAPER | .[0].Path')" >/dev/null
''}
''
