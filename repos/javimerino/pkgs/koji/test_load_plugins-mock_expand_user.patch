os.path.expanduser() fails, probably because nix unsets USER and USERNAME.

Patch os.path.expanduser() so that koji.cli.load_plugins() does not
choke when expanding the USER's home directory, but it loads the test
plugins for the test to proceed.

diff --git a/tests/test_cli/test_load_plugins.py b/tests/test_cli/test_load_plugins.py
index c9aa6a351fe6..f2b96a1c6a22 100644
--- a/tests/test_cli/test_load_plugins.py
+++ b/tests/test_cli/test_load_plugins.py
@@ -1,6 +1,7 @@
 from __future__ import absolute_import
 
 import os
+import re
 
 import unittest
 
@@ -14,11 +15,17 @@ cli = loadcli.cli
 class TestLoadPlugins(unittest.TestCase):
     @mock.patch('logging.getLogger')
     @mock.patch('os.path.isdir')
-    def test_load_plugins(self, isdir, getLogger):
+    @mock.patch('os.path.expanduser')
+    def test_load_plugins(self, expanduser, isdir, getLogger):
         # skip system path and default user plugin directory check
         isdir.side_effect = lambda path: False if path.startswith('/usr') \
                             or path == os.path.expanduser("~/.koji/plugins") \
                             else True
+
+        def simple_expanduser(s):
+            return re.sub('^~', '/homeless-shelter', s)
+        expanduser.side_effect = simple_expanduser
+
         cli.load_plugins(os.path.dirname(__file__) + '/data/cli_plugins1:' +
                          os.path.dirname(__file__) + '/data/cli_plugins2')
         self.assertTrue(callable(cli.foobar))
