#!/usr/bin/env bash

CACHEDIR=$HOME/.cache/nixos-options

AGEFILE=/etc/nixos/configs/base.nix
OPTSFILE=$CACHEDIR/options.txt
PKGSFILE=$CACHEDIR/packages.txt

mkdir -p $CACHEDIR

# See if options and packages are outdated
if [[ $1 == "-o" ]]; then
    TARGET=$OPTSFILE
    PR="NixOS Options> "
    PREVIEW="nixos-option"
    function seeDef () {
      nixos-option "${1}" | tail -n 2 | head -n 1 | cut -d "\"" -f 2
    }
else
    TARGET=$PKGSFILE
    PR="Nixpkgs> "
    PREVIEW="nix-env -qa --description -A"
    function seeDef () {
      nix-env -qa --json -A "${1}" \
        | jq ".\"${1}\".meta.position" \
        | cut -d "\"" -f 2 | cut -d ":" -f 1
    }
fi

SELECTION=`cat ${TARGET}                                \
  | fzf --prompt="${PR}" --reverse                      \
        --preview-window=wrap:70%                     \
        --preview="echo -e \"{1}\n\"; ${PREVIEW} {1}"`

if [ ! -z "$SELECTION" ];
then
  DEFPATH=`seeDef ${SELECTION}`
  echo $SELECTION
  nix run nixpkgs.alacritty -c alacritty -e zsh -c "nix run ${SELECTION}"
fi

OPTSAGE=0
PKGSAGE=0

# Do updates to package/options lists
if [ -e $OPTSFILE ];
then
  OPTSAGE=$(date -r $OPTSFILE +%s)
fi

if [ -e $PKGSFILE ];
then
  PKGSAGE=$(date -r $PKGSFILE +%s)
fi

NIXAGE=$(date -r $AGEFILE +%s)

if [[ ( $(( ($NIXAGE - $OPTSAGE) / 60)) -gt 5) ]];
then writeOpts $OPTSFILE & fi

if [[ ( $(( ($NIXAGE - $PKGSAGE) / 60)) -gt 5 ) ]];
then writePacks $PKGSFILE & fi

#vim: sh
