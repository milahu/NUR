error:
… from call site

  at ./default.nix:18:60:

    17|       in
    18|       if type == "regular" && isNix then { "${basename}" = callPackage filename { }; } else { }
      |                                                            ^
    19|     ) (builtins.readDir directory);

… while calling 'callPackageWith'

  at <nixpkgs> + /lib/customisation.nix:240:19:

   239|   callPackageWith =
   240|     autoArgs: fn: args:
      |                   ^
   241|     let

… from call site

  at <nixpkgs> + /lib/trivial.nix:989:5:

   988|     # TODO: Should we add call-time "type" checking like built in?
   989|     __functor = self: f;
      |     ^
   990|     __functionArgs = args;

… while calling anonymous lambda

  at <nixpkgs> + /lib/customisation.nix:161:7:

   160|     mirrorArgs (
   161|       origArgs:
      |       ^
   162|       let

… from call site

  at <nixpkgs> + /lib/customisation.nix:163:18:

   162|       let
   163|         result = f origArgs;
      |                  ^
   164|

… while calling anonymous lambda

  at ./pkgs/modelcontextprotocol/mcp-inspector.nix:1:1:

     1| { nur, runCommand }:
      | ^
     2| nur.repos.josh.nodePackages."@modelcontextprotocol/inspector".overrideAttrs (

… from call site

  at ./pkgs/node2nix/nodePackages.nix:46:13:

    45|
    46|   nodeEnv = callPackage "${path}/pkgs/development/node-packages/node-env.nix" { };
      |             ^
    47|

… while calling 'callPackageWith'

  at <nixpkgs> + /lib/customisation.nix:240:19:

   239|   callPackageWith =
   240|     autoArgs: fn: args:
      |                   ^
   241|     let

… from call site

  at <nixpkgs> + /lib/customisation.nix:254:11:

   253|         (
   254|           filterAttrs (name: value: !value)
      |           ^
   255|             # Filter out arguments that would be passed

… while calling 'filterAttrs'

  at <nixpkgs> + /lib/attrsets.nix:657:23:

   656|   */
   657|   filterAttrs = pred: set: removeAttrs set (filter (name: !pred name set.${name}) (attrNames set));
      |                       ^
   658|

… from call site

  at <nixpkgs> + /lib/customisation.nix:243:15:

   242|       f = if isFunction fn then fn else import fn;
   243|       fargs = functionArgs f;
      |               ^
   244|

… while calling 'functionArgs'

  at <nixpkgs> + /lib/trivial.nix:1007:5:

  1006|   functionArgs =
  1007|     f:
      |     ^
  1008|     if f ? __functor then

error: path '/nix/store/11v9mbpjff5nqsx17kq2if7jrv26mnf5-0p3jjdn5wqnx2lsfwl7ygvg19vc2vks7-source' is not valid
