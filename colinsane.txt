error:
… while calling anonymous lambda

  at ./pkgs/default.nix:192:15:

   191|     // (lib.mapAttrs
   192|       (pname: _pkg: if unpatched ? "${pname}" && unpatched."${pname}" ? version && lib.versionAtLeast unpatched."${pname}".version final'.sane."${pname}".version  then
      |               ^
   193|         unpatched."${pname}"

… from call site

  at ./pkgs/default.nix:64:20:

    63|     megapixels-next = callPackage ./additional/megapixels-next { };
    64|     mobile-nixos = callPackage ./additional/mobile-nixos { };
      |                    ^
    65|     modemmanager-split = callPackage ./additional/modemmanager-split { };

… while calling 'callPackageWith'

  at <nixpkgs> + /lib/customisation.nix:212:35:

   211|   */
   212|   callPackageWith = autoArgs: fn: args:
      |                                   ^
   213|     let

… from call site

  at <nixpkgs> + /lib/trivial.nix:955:7:

   954|     { # TODO: Should we add call-time "type" checking like built in?
   955|       __functor = self: f;
      |       ^
   956|       __functionArgs = args;

… while calling anonymous lambda

  at <nixpkgs> + /lib/customisation.nix:136:17:

   135|     in
   136|     mirrorArgs (origArgs:
      |                 ^
   137|     let

… from call site

  at <nixpkgs> + /lib/customisation.nix:138:16:

   137|     let
   138|       result = f origArgs;
      |                ^
   139|

… while calling anonymous lambda

  at ./pkgs/additional/mobile-nixos/default.nix:1:1:

     1| { pkgs
      | ^
     2| , fetchFromGitHub

… from call site

  at ./pkgs/additional/mobile-nixos/default.nix:16:4:

    15|   final = pkgs.extend overlay;
    16| in src.overrideAttrs (base: {
      |    ^
    17|   # passthru only mobile-nixos' own packages -- not the whole nixpkgs-with-mobile-nixos-as-overlay:

… while calling 'overrideAttrs'

  at <nixpkgs> + /lib/customisation.nix:152:73:

   151|           overrideDerivation = fdrv: overrideResult (x: overrideDerivation x fdrv);
   152|           ${if result ? overrideAttrs then "overrideAttrs" else null} = fdrv:
      |                                                                         ^
   153|             overrideResult (x: x.overrideAttrs fdrv);

… from call site

  at <nixpkgs> + /lib/customisation.nix:153:13:

   152|           ${if result ? overrideAttrs then "overrideAttrs" else null} = fdrv:
   153|             overrideResult (x: x.overrideAttrs fdrv);
      |             ^
   154|         }

… while calling 'overrideResult'

  at <nixpkgs> + /lib/customisation.nix:146:24:

   145|       # Change the result of the function call by applying g to it
   146|       overrideResult = g: makeOverridable (mirrorArgs (args: g (f args))) origArgs;
      |                        ^
   147|     in

… from call site

  at <nixpkgs> + /lib/trivial.nix:955:7:

   954|     { # TODO: Should we add call-time "type" checking like built in?
   955|       __functor = self: f;
      |       ^
   956|       __functionArgs = args;

… while calling anonymous lambda

  at <nixpkgs> + /lib/customisation.nix:136:17:

   135|     in
   136|     mirrorArgs (origArgs:
      |                 ^
   137|     let

… from call site

  at <nixpkgs> + /lib/trivial.nix:955:7:

   954|     { # TODO: Should we add call-time "type" checking like built in?
   955|       __functor = self: f;
      |       ^
   956|       __functionArgs = args;

… while calling anonymous lambda

  at <nixpkgs> + /lib/customisation.nix:146:56:

   145|       # Change the result of the function call by applying g to it
   146|       overrideResult = g: makeOverridable (mirrorArgs (args: g (f args))) origArgs;
      |                                                        ^
   147|     in

… from call site

  at <nixpkgs> + /lib/customisation.nix:146:62:

   145|       # Change the result of the function call by applying g to it
   146|       overrideResult = g: makeOverridable (mirrorArgs (args: g (f args))) origArgs;
      |                                                              ^
   147|     in

… while calling anonymous lambda

  at <nixpkgs> + /lib/customisation.nix:153:29:

   152|           ${if result ? overrideAttrs then "overrideAttrs" else null} = fdrv:
   153|             overrideResult (x: x.overrideAttrs fdrv);
      |                             ^
   154|         }

… from call site

  at <nixpkgs> + /lib/customisation.nix:153:32:

   152|           ${if result ? overrideAttrs then "overrideAttrs" else null} = fdrv:
   153|             overrideResult (x: x.overrideAttrs fdrv);
      |                                ^
   154|         }

… while calling anonymous lambda

  at <nixpkgs> + /pkgs/stdenv/generic/make-derivation.nix:100:8:

    99|     mkDerivationSimple
   100|       (f0:
      |        ^
   101|         let

… from call site

  at <nixpkgs> + /pkgs/stdenv/generic/make-derivation.nix:110:11:

   109|         in
   110|           makeDerivationExtensible (self: attrs // (if builtins.isFunction f0 || f0?__functor then f self attrs else f0)))
      |           ^
   111|       attrs;

… while calling 'makeDerivationExtensible'

  at <nixpkgs> + /pkgs/stdenv/generic/make-derivation.nix:59:30:

    58|   # Based off lib.makeExtensible, with modifications:
    59|   makeDerivationExtensible = rattrs:
      |                              ^
    60|     let

… from call site

  at <nixpkgs> + /pkgs/stdenv/generic/make-derivation.nix:92:9:

    91|       finalPackage =
    92|         mkDerivationSimple overrideAttrs args;
      |         ^
    93|

… while calling 'mkDerivationSimple'

  at <nixpkgs> + /pkgs/stdenv/generic/make-derivation.nix:511:1:

   510| # * [package attributes]: https://nixos.org/manual/nix/stable/glossary#package-attribute-set
   511| {
      | ^
   512|

… from call site

  at <nixpkgs> + /pkgs/stdenv/generic/make-derivation.nix:588:1:

   587|
   588| extendDerivation
      | ^
   589|   validity.handled

… while calling 'extendDerivation'

  at <nixpkgs> + /lib/customisation.nix:339:43:

   338|   */
   339|   extendDerivation = condition: passthru: drv:
      |                                           ^
   340|     let

error: path '/nix/store/49469mkip84rbb9qvg0gkx0a6arfy4zh-source.drv' is not valid
